services:
  web:
    image: ${WEB_IMAGE:-ghcr.io/ekimteam/sandmatch/web}:${WEB_IMAGE_TAG:-latest}
    restart: unless-stopped
    env_file:
      - .env
    expose:
      - "8000"
    volumes:
      - ./staticfiles:/app/staticfiles
      - ./media:/app/media
    healthcheck:
      test: ["CMD", "sh", "-c", "python -c 'import urllib.request; urllib.request.urlopen(\"http://localhost:8000/api/health/\")' && test -f /app/staticfiles/frontend/manifest.json"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./staticfiles:/app/staticfiles:ro
      - ./media:/app/media:ro
    depends_on:
      web:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/api/health/"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

# Пример использования:
#   WEB_IMAGE=ghcr.io/ekimteam/sandmatch/web WEB_IMAGE_TAG=main-<sha> docker compose -f docker-compose.prod.yml up -d
